local v0=string.char;local v1=string.byte;local v2=string.sub;local v3=bit32 or bit ;local v4=v3.bxor;local v5=table.concat;local v6=table.insert;local function v7(v24,v25) local v26={};for v41=1, #v24 do v6(v26,v0(v4(v1(v2(v24,v41,v41 + 1 )),v1(v2(v25,1 + (v41% #v25) ,1 + (v41% #v25) + 1 )))%256 ));end return v5(v26);end local v8=tonumber;local v9=string.byte;local v10=string.char;local v11=string.sub;local v12=string.gsub;local v13=string.rep;local v14=table.concat;local v15=table.insert;local v16=math.ldexp;local v17=getfenv or function() return _ENV;end ;local v18=setmetatable;local v19=pcall;local v20=select;local v21=unpack or table.unpack ;local v22=tonumber;local function v23(v27,v28,...) local v29=1;local v30;v27=v12(v11(v27,5),v7("\60\156","\55\18\178\151\147\92\164"),function(v42) if (v9(v42,2)==79) then local v101=0;while true do if (v101==0) then v30=v8(v11(v42,1,1));return "";end end else local v102=v10(v8(v42,16));if v30 then local v112=0;local v113;while true do if (v112==0) then v113=v13(v102,v30);v30=nil;v112=1;end if (v112==1) then return v113;end end else return v102;end end end);local function v31(v43,v44,v45) if v45 then local v103=0;local v104;while true do if (v103==0) then v104=(v43/(2^(v44-1)))%(2^(((v45-1) -(v44-1)) + (2 -1))) ;return v104-(v104%1) ;end end else local v105=2^(v44-1) ;return (((v43%(v105 + v105))>=v105) and 1) or 0 ;end end local function v32() local v46=0;local v47;while true do if (v46==0) then v47=v9(v27,v29,v29);v29=v29 + 1 ;v46=1;end if (v46==1) then return v47;end end end local function v33() local v48=0;local v49;local v50;while true do if (v48==1) then return (v50 * 256) + v49 ;end if (v48==0) then v49,v50=v9(v27,v29,v29 + 2 );v29=v29 + 2 ;v48=1;end end end local function v34() local v51=0;local v52;local v53;local v54;local v55;while true do if (v51==1) then return (v55 * 16777216) + (v54 * 65536) + (v53 * 256) + v52 ;end if (v51==0) then v52,v53,v54,v55=v9(v27,v29,v29 + 3 );v29=v29 + 4 ;v51=1;end end end local function v35() local v56=v34();local v57=v34();local v58=1;local v59=(v31(v57,1,20) * (2^32)) + v56 ;local v60=v31(v57,21,88 -57 );local v61=((v31(v57,32)==1) and  -1) or 1 ;if (v60==0) then if (v59==(0 -0)) then return v61 * 0 ;else local v114=0;while true do if (v114==0) then v60=1;v58=0;break;end end end elseif (v60==2047) then return ((v59==0) and (v61 * (1/0))) or (v61 * NaN) ;end return v16(v61,v60-1023 ) * (v58 + (v59/(2^52))) ;end local function v36(v62) local v63=0;local v64;local v65;while true do if (v63==0) then v64=nil;if  not v62 then v62=v34();if (v62==(0 -0)) then return "";end end v63=1;end if (v63==3) then return v14(v65);end if (v63==1) then v64=v11(v27,v29,(v29 + v62) -1 );v29=v29 + v62 ;v63=2;end if (v63==2) then v65={};for v115=1, #v64 do v65[v115]=v10(v9(v11(v64,v115,v115)));end v63=3;end end end local v37=v34;local function v38(...) return {...},v20("#",...);end local function v39() local v66={};local v67={};local v68={};local v69={v66,v67,nil,v68};local v70=v34();local v71={};for v79=620 -(555 + 64) ,v70 do local v80=0;local v81;local v82;while true do if (v80==0) then v81=v32();v82=nil;v80=1;end if (1==v80) then if (v81==1) then v82=v32()~=0 ;elseif (v81==2) then v82=v35();elseif (v81==3) then v82=v36();end v71[v79]=v82;break;end end end v69[934 -(857 + 74) ]=v32();for v83=569 -(367 + 201) ,v34() do local v84=v32();if (v31(v84,1,928 -(214 + 713) )==0) then local v108=v31(v84,1 + 1 ,3);local v109=v31(v84,4,6);local v110={v33(),v33(),nil,nil};if (v108==0) then local v122=0;while true do if (0==v122) then v110[3]=v33();v110[4]=v33();break;end end elseif (v108==1) then v110[1 + 2 ]=v34();elseif (v108==2) then v110[880 -(282 + 595) ]=v34() -(2^16) ;elseif (v108==3) then v110[3]=v34() -(2^16) ;v110[4]=v33();end if (v31(v109,1,1)==1) then v110[2]=v71[v110[2]];end if (v31(v109,2,2)==1) then v110[3]=v71[v110[3]];end if (v31(v109,3,3)==1) then v110[4]=v71[v110[4]];end v66[v83]=v110;end end for v85=1,v34() do v67[v85-1 ]=v39();end return v69;end local function v40(v73,v74,v75) local v76=v73[1];local v77=v73[2];local v78=v73[1640 -(1523 + 114) ];return function(...) local v87=v76;local v88=v77;local v89=v78;local v90=v38;local v91=1;local v92= -1;local v93={};local v94={...};local v95=v20("#",...) -1 ;local v96={};local v97={};for v106=0,v95 do if (v106>=v89) then v93[v106-v89 ]=v94[v106 + 1 ];else v97[v106]=v94[v106 + 1 ];end end local v98=(v95-v89) + 1 ;local v99;local v100;while true do local v107=0;while true do if (v107==0) then v99=v87[v91];v100=v99[1 + 0 ];v107=1;end if (v107==1) then if (v100<=51) then if (v100<=25) then if (v100<=12) then if (v100<=5) then if (v100<=2) then if (v100<=0) then local v137=0;local v138;while true do if (v137==0) then v138=v99[2 -0 ];v97[v138](v21(v97,v138 + 1 ,v99[3]));break;end end elseif (v100==1) then local v181=0;local v182;local v183;while true do if (v181==0) then v182=v99[2];v183=v97[v182];v181=1;end if (v181==1) then for v423=v182 + 1 ,v92 do v15(v183,v97[v423]);end break;end end else v97[v99[2]]=v97[v99[3]]%v99[4] ;end elseif (v100<=3) then local v139=v99[1067 -(68 + 997) ];local v140=v97[v139];local v141=v97[v139 + 2 ];if (v141>0) then if (v140>v97[v139 + 1 ]) then v91=v99[3];else v97[v139 + 3 ]=v140;end elseif (v140<v97[v139 + 1 ]) then v91=v99[3];else v97[v139 + 3 ]=v140;end elseif (v100==4) then v97[v99[2]]= #v97[v99[1273 -(226 + 1044) ]];else v91=v99[3];end elseif (v100<=(34 -26)) then if (v100<=6) then local v142=v99[2];v97[v142](v21(v97,v142 + 1 ,v99[3]));elseif (v100==7) then do return;end else v97[v99[2]]=v99[3]~=0 ;end elseif (v100<=10) then if (v100>9) then v97[v99[2]]= #v97[v99[3]];else v97[v99[2]]=v97[v99[120 -(32 + 85) ]];end elseif (v100==11) then local v191=v99[2];local v192={v97[v191](v21(v97,v191 + 1 + 0 ,v92))};local v193=0;for v336=v191,v99[4] do local v337=0;while true do if (0==v337) then v193=v193 + 1 ;v97[v336]=v192[v193];break;end end end elseif (v97[v99[1 + 1 ]]==v99[4]) then v91=v91 + 1 ;else v91=v99[3];end elseif (v100<=18) then if (v100<=15) then if (v100<=13) then v97[v99[2]]=v99[3]~=0 ;elseif (v100>(971 -(892 + 65))) then if v97[v99[2]] then v91=v91 + 1 ;else v91=v99[3];end else for v338=v99[4 -2 ],v99[3] do v97[v338]=nil;end end elseif (v100<=16) then if  not v97[v99[2]] then v91=v91 + 1 ;else v91=v99[3];end elseif (v100==17) then v97[v99[2]]={};else v75[v99[3]]=v97[v99[2]];end elseif (v100<=21) then if (v100<=19) then local v144=0;local v145;while true do if (v144==0) then v145=v99[2];v97[v145]=v97[v145](v21(v97,v145 + 1 ,v99[5 -2 ]));break;end end elseif (v100>20) then v97[v99[2]]=v97[v99[3]][v99[4]];else local v200=0;local v201;while true do if (v200==0) then v201=v99[2];v97[v201]=v97[v201](v97[v201 + 1 ]);break;end end end elseif (v100<=23) then if (v100>22) then do return v97[v99[3 -1 ]]();end else v97[v99[2]]=v99[3];end elseif (v100==24) then if  not v97[v99[2]] then v91=v91 + 1 ;else v91=v99[3];end else local v204=0;local v205;local v206;local v207;while true do if (1==v204) then v207={};v206=v18({},{[v7("\194\115\59\130\249\73\42","\236\157\44\82")]=function(v426,v427) local v428=0;local v429;while true do if (v428==0) then v429=v207[v427];return v429[351 -(87 + 263) ][v429[182 -(67 + 113) ]];end end end,[v7("\112\100\36\43\194\69\65\95\47\54","\44\47\59\74\78\181")]=function(v430,v431,v432) local v433=v207[v431];v433[1][v433[2]]=v432;end});v204=2;end if (v204==2) then for v435=1,v99[3 + 1 ] do v91=v91 + 1 ;local v436=v87[v91];if (v436[1]==59) then v207[v435-1 ]={v97,v436[3 + 0 ]};else v207[v435-1 ]={v74,v436[3]};end v96[ #v96 + 1 ]=v207;end v97[v99[2]]=v40(v205,v206,v75);break;end if (v204==0) then v205=v88[v99[3]];v206=nil;v204=1;end end end elseif (v100<=38) then if (v100<=31) then if (v100<=28) then if (v100<=26) then v97[v99[2]]=v97[v99[3]] + v99[4] ;elseif (v100>27) then local v208=0;local v209;while true do if (v208==0) then v209=v99[2];v97[v209]=v97[v209]();break;end end else v97[v99[2]]=v97[v99[11 -8 ]][v99[4]];end elseif (v100<=29) then v97[v99[2]][v97[v99[3]]]=v97[v99[4]];elseif (v100==(982 -(802 + 150))) then v97[v99[2]]=v75[v99[3]];else local v214=0;local v215;while true do if (0==v214) then v215=v99[5 -3 ];v97[v215](v97[v215 + 1 ]);break;end end end elseif (v100<=34) then if (v100<=32) then local v149=0;local v150;while true do if (v149==0) then v150=v99[2];do return v97[v150](v21(v97,v150 + 1 ,v99[3]));end break;end end elseif (v100>(59 -26)) then local v216=v99[2];do return v97[v216](v21(v97,v216 + 1 ,v99[3 + 0 ]));end else v97[v99[2]]=v97[v99[3]] -v97[v99[4]] ;end elseif (v100<=36) then if (v100==35) then v97[v99[2]]=v99[3];elseif (v99[2]==v97[v99[4]]) then v91=v91 + 1 ;else v91=v99[3];end elseif (v100>37) then local v220=0;local v221;local v222;while true do if (1==v220) then v97[v221 + 1 ]=v222;v97[v221]=v222[v99[4]];break;end if (0==v220) then v221=v99[2];v222=v97[v99[3]];v220=1;end end elseif (v97[v99[999 -(915 + 82) ]]==v99[4]) then v91=v91 + 1 ;else v91=v99[3];end elseif (v100<=(124 -80)) then if (v100<=41) then if (v100<=39) then v75[v99[2 + 1 ]]=v97[v99[2]];elseif (v100==40) then local v223=v99[2];v97[v223](v97[v223 + 1 ]);else v97[v99[2]]=v99[3] + v97[v99[4]] ;end elseif (v100<=42) then v97[v99[2 -0 ]]();elseif (v100>43) then local v225=v99[2];local v226,v227=v90(v97[v225](v97[v225 + 1 ]));v92=(v227 + v225) -1 ;local v228=0;for v343=v225,v92 do v228=v228 + 1 ;v97[v343]=v226[v228];end else local v229=v99[2];local v230,v231=v90(v97[v229](v21(v97,v229 + 1 ,v92)));v92=(v231 + v229) -1 ;local v232=0;for v346=v229,v92 do local v347=0;while true do if (v347==0) then v232=v232 + 1 ;v97[v346]=v230[v232];break;end end end end elseif (v100<=47) then if (v100<=(1232 -(1069 + 118))) then v97[v99[2]]=v97[v99[3]]%v99[4] ;elseif (v100==46) then v97[v99[2]]=v97[v99[3]] + v99[4] ;else v97[v99[2]]=v97[v99[3]]%v97[v99[4]] ;end elseif (v100<=49) then if (v100>48) then local v235=0;local v236;local v237;local v238;local v239;while true do if (v235==0) then v236=v99[2];v237,v238=v90(v97[v236](v21(v97,v236 + 1 ,v92)));v235=1;end if (v235==1) then v92=(v238 + v236) -1 ;v239=0;v235=2;end if (v235==2) then for v440=v236,v92 do local v441=0;while true do if (v441==0) then v239=v239 + (2 -1) ;v97[v440]=v237[v239];break;end end end break;end end else local v240=0;local v241;local v242;while true do if (v240==0) then v241=v99[2];v242=v97[v241];v240=1;end if (v240==1) then for v442=v241 + 1 ,v92 do v15(v242,v97[v442]);end break;end end end elseif (v100==50) then local v243=v99[3 -1 ];v97[v243]=v97[v243](v21(v97,v243 + 1 ,v92));elseif v97[v99[1 + 1 ]] then v91=v91 + 1 ;else v91=v99[3];end elseif (v100<=77) then if (v100<=(113 -49)) then if (v100<=57) then if (v100<=54) then if (v100<=52) then v97[v99[2]]=v74[v99[3]];elseif (v100==53) then local v245=v99[2 + 0 ];do return v21(v97,v245,v92);end else v97[v99[2]][v97[v99[3]]]=v99[795 -(368 + 423) ];end elseif (v100<=55) then local v156=0;local v157;while true do if (v156==0) then v157=v99[2];v97[v157]=v97[v157](v97[v157 + (3 -2) ]);break;end end elseif (v100>56) then local v248=0;local v249;while true do if (0==v248) then v249=v99[2];v97[v249](v21(v97,v249 + 1 ,v92));break;end end else local v250=v99[3];local v251=v97[v250];for v350=v250 + 1 ,v99[4] do v251=v251   .. v97[v350] ;end v97[v99[2]]=v251;end elseif (v100<=60) then if (v100<=58) then local v158=0;local v159;local v160;while true do if (v158==0) then v159=v99[3];v160=v97[v159];v158=1;end if (v158==1) then for v381=v159 + 1 ,v99[4] do v160=v160   .. v97[v381] ;end v97[v99[2]]=v160;break;end end elseif (v100>59) then local v253=v99[2];local v254,v255=v90(v97[v253]());v92=(v255 + v253) -1 ;local v256=0;for v354=v253,v92 do local v355=0;while true do if (v355==0) then v256=v256 + (19 -(10 + 8)) ;v97[v354]=v254[v256];break;end end end else v97[v99[2]]=v97[v99[3]];end elseif (v100<=62) then if (v100>61) then v74[v99[3]]=v97[v99[2]];else local v261=v99[2];local v262=v97[v99[3]];v97[v261 + (3 -2) ]=v262;v97[v261]=v262[v99[4]];end elseif (v100>63) then v97[v99[2]]=v97[v99[3]] * v97[v99[4]] ;else local v267=v99[2];local v268=v97[v267];local v269=v97[v267 + 2 ];if (v269>0) then if (v268>v97[v267 + (443 -(416 + 26)) ]) then v91=v99[3];else v97[v267 + 3 ]=v268;end elseif (v268<v97[v267 + 1 ]) then v91=v99[3];else v97[v267 + 3 ]=v268;end end elseif (v100<=70) then if (v100<=67) then if (v100<=65) then v97[v99[6 -4 ]]=v97[v99[3]] -v97[v99[4]] ;elseif (v100>66) then local v270=0;local v271;local v272;local v273;while true do if (v270==1) then v273=v97[v271] + v272 ;v97[v271]=v273;v270=2;end if (v270==0) then v271=v99[2];v272=v97[v271 + 2 ];v270=1;end if (2==v270) then if (v272>0) then if (v273<=v97[v271 + 1 ]) then local v488=0;while true do if (v488==0) then v91=v99[3];v97[v271 + 3 ]=v273;break;end end end elseif (v273>=v97[v271 + 1 ]) then local v489=0;while true do if (0==v489) then v91=v99[3];v97[v271 + 3 ]=v273;break;end end end break;end end else local v274=0;local v275;while true do if (v274==0) then v275=v99[2];v97[v275]=v97[v275](v21(v97,v275 + 1 ,v92));break;end end end elseif (v100<=68) then local v162=v99[1 + 1 ];local v163=v99[4];local v164=v162 + 2 ;local v165={v97[v162](v97[v162 + 1 ],v97[v164])};for v178=1,v163 do v97[v164 + v178 ]=v165[v178];end local v166=v165[1];if v166 then local v276=0;while true do if (v276==0) then v97[v164]=v166;v91=v99[3];break;end end else v91=v91 + (1 -0) ;end elseif (v100>69) then local v277=0;local v278;local v279;while true do if (v277==1) then for v449=1, #v96 do local v450=v96[v449];for v473=438 -(145 + 293) , #v450 do local v474=0;local v475;local v476;local v477;while true do if (v474==1) then v477=v475[2];if ((v476==v97) and (v477>=v278)) then local v510=0;while true do if (v510==0) then v279[v477]=v476[v477];v475[1]=v279;break;end end end break;end if (v474==0) then v475=v450[v473];v476=v475[1];v474=1;end end end end break;end if (v277==0) then v278=v99[2];v279={};v277=1;end end else for v356=v99[432 -(44 + 386) ],v99[3] do v97[v356]=nil;end end elseif (v100<=73) then if (v100<=71) then local v167=0;local v168;while true do if (0==v167) then v168=v99[1488 -(998 + 488) ];v97[v168](v21(v97,v168 + 1 ,v92));break;end end elseif (v100>72) then v97[v99[2]][v97[v99[3]]]=v99[4];elseif (v97[v99[2]]==v97[v99[4]]) then v91=v91 + 1 ;else v91=v99[3];end elseif (v100<=75) then if (v100==(24 + 50)) then local v282=0;local v283;while true do if (v282==0) then v283=v99[2 + 0 ];do return v21(v97,v283,v92);end break;end end elseif (v97[v99[2]]==v97[v99[4]]) then v91=v91 + (773 -(201 + 571)) ;else v91=v99[3];end elseif (v100==76) then if (v99[2]==v97[v99[4]]) then v91=v91 + 1 ;else v91=v99[1141 -(116 + 1022) ];end else v97[v99[2]]=v97[v99[3]]%v97[v99[4]] ;end elseif (v100<=90) then if (v100<=83) then if (v100<=80) then if (v100<=78) then v97[v99[2]]=v97[v99[3]] * v97[v99[4]] ;elseif (v100>79) then local v285=0;local v286;local v287;local v288;while true do if (v285==1) then v288={};v287=v18({},{[v7("\26\238\83\84\183\32\201","\211\69\177\58\58")]=function(v451,v452) local v453=v288[v452];return v453[4 -3 ][v453[2]];end,[v7("\136\218\119\240\254\194\185\225\124\237","\171\215\133\25\149\137")]=function(v454,v455,v456) local v457=v288[v455];v457[1][v457[2]]=v456;end});v285=2;end if (0==v285) then v286=v88[v99[3]];v287=nil;v285=1;end if (v285==2) then for v459=1,v99[4] do local v460=0;local v461;while true do if (1==v460) then if (v461[1]==59) then v288[v459-(1 + 0) ]={v97,v461[3]};else v288[v459-(3 -2) ]={v74,v461[3]};end v96[ #v96 + 1 ]=v288;break;end if (v460==0) then v91=v91 + 1 ;v461=v87[v91];v460=1;end end end v97[v99[2]]=v40(v286,v287,v75);break;end end else local v289=v99[2];local v290,v291=v90(v97[v289](v21(v97,v289 + 1 ,v99[3])));v92=(v291 + v289) -1 ;local v292=0;for v359=v289,v92 do local v360=0;while true do if (0==v360) then v292=v292 + (2 -1) ;v97[v359]=v290[v292];break;end end end end elseif (v100<=81) then do return v97[v99[2]]();end elseif (v100==82) then v97[v99[2]]=v99[3] + v97[v99[4]] ;else do return;end end elseif (v100<=86) then if (v100<=84) then v97[v99[2]]=v74[v99[3]];elseif (v100>85) then local v294=0;local v295;local v296;local v297;local v298;while true do if (v294==1) then v92=(v297 + v295) -1 ;v298=0;v294=2;end if (2==v294) then for v464=v295,v92 do local v465=0;while true do if (v465==0) then v298=v298 + 1 ;v97[v464]=v296[v298];break;end end end break;end if (v294==0) then v295=v99[2];v296,v297=v90(v97[v295](v21(v97,v295 + 1 ,v99[3])));v294=1;end end else v91=v99[3];end elseif (v100<=88) then if (v100==87) then local v300=v99[2];local v301,v302=v90(v97[v300]());v92=(v302 + v300) -1 ;local v303=0;for v361=v300,v92 do v303=v303 + 1 ;v97[v361]=v301[v303];end else local v304=0;local v305;local v306;local v307;while true do if (v304==0) then v305=v99[2];v306={v97[v305](v21(v97,v305 + 1 ,v92))};v304=1;end if (v304==1) then v307=0 + 0 ;for v466=v305,v99[889 -(261 + 624) ] do local v467=0;while true do if (v467==0) then v307=v307 + 1 ;v97[v466]=v306[v307];break;end end end break;end end end elseif (v100>89) then local v308=v99[2];local v309=v99[6 -2 ];local v310=v308 + 2 ;local v311={v97[v308](v97[v308 + 1 ],v97[v310])};for v364=1,v309 do v97[v310 + v364 ]=v311[v364];end local v312=v311[1];if v312 then local v385=0;while true do if (v385==0) then v97[v310]=v312;v91=v99[3];break;end end else v91=v91 + 1 ;end else v97[v99[2]]();end elseif (v100<=96) then if (v100<=93) then if (v100<=91) then local v172=0;local v173;while true do if (v172==0) then v173=v99[2];v97[v173]=v97[v173](v21(v97,v173 + 1 ,v99[3]));break;end end elseif (v100>92) then v97[v99[2]]={};else v97[v99[2]][v97[v99[3]]]=v97[v99[4]];end elseif (v100<=94) then v97[v99[1425 -(630 + 793) ]]=v75[v99[3]];elseif (v100==95) then v97[v99[6 -4 ]]=v40(v88[v99[3]],nil,v75);else v97[v99[2]][v99[14 -11 ]]=v97[v99[4]];end elseif (v100<=99) then if (v100<=97) then v97[v99[2]][v99[3]]=v97[v99[4]];elseif (v100>98) then v74[v99[3]]=v97[v99[1 + 1 ]];else local v321=v99[2];local v322={};for v369=1, #v96 do local v370=v96[v369];for v386=0, #v370 do local v387=0;local v388;local v389;local v390;while true do if (v387==0) then v388=v370[v386];v389=v388[1];v387=1;end if (v387==1) then v390=v388[2];if ((v389==v97) and (v390>=v321)) then local v496=0;while true do if (v496==0) then v322[v390]=v389[v390];v388[1]=v322;break;end end end break;end end end end end elseif (v100<=101) then if (v100>100) then local v323=0;local v324;local v325;local v326;local v327;while true do if (v323==2) then for v468=v324,v92 do v327=v327 + (3 -2) ;v97[v468]=v325[v327];end break;end if (v323==0) then v324=v99[2];v325,v326=v90(v97[v324](v97[v324 + 1 ]));v323=1;end if (v323==1) then v92=(v326 + v324) -1 ;v327=0;v323=2;end end else local v328=v99[2];local v329=v97[v328 + 2 ];local v330=v97[v328] + v329 ;v97[v328]=v330;if (v329>0) then if (v330<=v97[v328 + 1 ]) then local v471=0;while true do if (v471==0) then v91=v99[3];v97[v328 + 3 ]=v330;break;end end end elseif (v330>=v97[v328 + 1 ]) then local v472=0;while true do if (v472==0) then v91=v99[3];v97[v328 + 3 ]=v330;break;end end end end elseif (v100==102) then local v332=v99[2];v97[v332]=v97[v332]();else v97[v99[2]]=v40(v88[v99[1750 -(760 + 987) ]],nil,v75);end v91=v91 + 1 ;break;end end end end;end return v40(v39(),{},v28)(...);end return vv17(),...);
